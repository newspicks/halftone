{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/drop-files.directive.ts","./src/app/image-manipulator.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ElementRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\nimport { ImageManipulatorService } from './image-manipulator.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'halftone';\n\n  brightness = 0;\n  contrast = 0;\n  sampleSize = 17;\n  width = 1080;\n  height = 1080;\n  files: any = [];\n\n  inputImage: File = null;\n  imageChangedEvent: any = '';\n  originalCropImage: any = '';\n  croppedImage: any = '';\n  halftoneImage: any = '';\n  croppingPosition: any = {};\n\n  isProcessing = false;\n  private element: HTMLElement;\n\n  /**\n   * @param imgSrv 画像変換のためのサービス ImageManipulatorService\n   * @param elementRef\n   * @memberof AppComponent\n   */\n  constructor(\n    private imgSrv: ImageManipulatorService,\n    private elementRef: ElementRef\n  ) {\n    this.element = this.elementRef.nativeElement;\n  }\n\n  fileChangeEvent(event: any): void {\n      this.imageChangedEvent = event;\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    this.originalCropImage = event.base64;\n    this.croppingPosition = event.imagePosition;\n  }\n\n  imageLoaded() {\n      // show cropper\n  }\n\n  cropperReady() {\n      // cropper ready\n  }\n\n  loadImageFailed() {\n      // show message\n  }\n\n  formatLabel(value: number): string {\n    return value.toString();\n  }\n\n  upload(file: any): Observable<any> {\n    return new Observable( ob => ob.next(file) );\n  }\n\n  /**\n   * 添付ファイルのためのFile API\n   *\n   * https://mi12cp.hatenablog.com/entry/2018/08/10/002344\n   * @desc メールに添付するためのファイルをFile APIで選択するもの\n   * @version 0.0.1\n   */\n  attacheFiles(event: File[]): void {\n    const files = event;  // FileList object\n\n    for (const file of files) {\n      if (!file.type.match('image/.*')) {\n        continue;\n      }\n\n      this.inputImage = files[0];\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const sendData = {\n          filename: file.name,\n          type: file.type,\n          size: file.size,\n          path: e.target['result'],\n        };\n\n        this.upload(sendData).subscribe(\n          data => {\n            this.files.push(data);\n          },\n          error => {\n            console.log(error);\n          }\n        );\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n\n  removeFile(num: number): void {\n    this.files.splice(num, 1);\n  }\n\n  /**\n   * ハーフトーン処理を実行する。\n   */\n  sampleSizeUpdated(): void {\n    this.isProcessing = true;\n    this.imgSrv.halftone(\n      this.files[0].path,\n      this.croppingPosition,\n      this.width,\n      this.height,\n      this.sampleSize, this.brightness / 100, this.contrast / 100)\n      .then((res) => {\n        this.halftoneImage = res;\n        this.isProcessing = false;\n      });\n  }\n\n  brightnessUpdated(event: any): void {\n    this.imgSrv.cropImageUpdate(this.originalCropImage, this.brightness / 100, this.contrast / 100)\n      .then((res) => {\n        this.croppedImage = res;\n      }).catch( err => {\n        console.error(err);\n      });\n  }\n\n  contrastUpdated(event: any): void {\n    this.imgSrv.cropImageUpdate(this.originalCropImage, this.brightness / 100, this.contrast / 100)\n      .then((res) => {\n        this.croppedImage = res;\n      }).catch( err => {\n        console.error(err);\n      });\n  }\n\n  /**\n   * 画像のダウンロードを実行する\n   * @param image ダウンロードの対象とするBase64データ\n   */\n  downloadImage(type: string): void {\n    let image: string;\n    let outputFileName: string;\n\n    switch (type) {\n      case 'halftone':\n        image = this.halftoneImage;\n        outputFileName = this.inputImage.name.replace(/\\.(jpg|jpeg|png)/i, '.halftone.jpg');\n        break;\n      case 'cropped':\n        image = this.croppedImage;\n        outputFileName = this.inputImage.name.replace(/\\.(jpg|jpeg|png)/i, '.crop.jpg');\n        break;\n      default:\n        throw new Error('type must be halftone or cropped');\n    }\n\n    const url = window.URL.createObjectURL(this.toBlob(image));\n    const link: HTMLAnchorElement = this.element.querySelector('#img-donwload') as HTMLAnchorElement;\n    link.href = url;\n    link.download = outputFileName;\n    link.click();\n  }\n\n  /**\n   * 初期化\n   * @memberof AppComponent\n   */\n  initialize(): void {\n    this.files = [];\n    this.inputImage = null;\n    this.imageChangedEvent = '';\n    this.originalCropImage = '';\n    this.croppedImage = '';\n    this.halftoneImage = '';\n    this.croppingPosition = {};\n    this.isProcessing = false;\n  }\n\n  /**\n   * base64文字列になっているバイナリデータをBlobバイナリデータに変換する\n   *\n   * @private\n   * @param {string} base64 バイナリデータを base64 エンコードして更に文字列化した文字列\n   * @returns {Blob} 引数の文字列をバイナリに戻したバイナリデータ\n   * @memberof AppComponent\n   * @description\n   *  ZIP ファイルへの変換のみ対応している\n   * @see\n   *  https://developer.mozilla.org/ja/docs/Web/API/WindowBase64/atob\n   *  https://developer.mozilla.org/ja/docs/Web/API/Blob\n   *  https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_objects/Uint8Array\n   */\n  private toBlob(base64: string): Blob {\n    const bin = atob(base64.replace(/^.*,/, ''));\n    const buffer = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; i++) {\n      buffer[i] = bin.charCodeAt(i);\n    }\n    return new Blob([buffer.buffer]);\n  }\n}\n","<div class=\"container\">\n  <h1>Halftoned Image Processing</h1>\n  <div>\n    <mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n      <mat-grid-tile>\n        <mat-card>\n          <mat-card-title>\n            <h2>original image</h2>\n          </mat-card-title>\n          <mat-card-content \n          [appDropFiles] \n          (selectedFiles)=\"attacheFiles($event)\"\n          class=\"attache-file-zone mat-elevation-z8\">\n            <p>Drag Image File Here!</p>\n            <image-cropper \n            [imageFile]=\"inputImage\"\n            [imageChangedEvent]=\"imageChangedEvent\"\n            [maintainAspectRatio]=\"true\"\n            [aspectRatio]=\"width / height\"\n            format=\"jpg\"\n            [resizeToWidth]=\"width\"\n            (imageCropped)=\"imageCropped($event)\"\n            (imageLoaded)=\"imageLoaded()\"\n            (cropperReady)=\"cropperReady()\"\n            (loadImageFailed)=\"loadImageFailed()\"\n            ></image-cropper>\n          </mat-card-content>\n        </mat-card>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-card>\n          <mat-card-title>\n            <h2>cropped image</h2>\n          </mat-card-title>\n          <mat-card-content>\n            <img [src]=\"croppedImage\" class=\"cropped\"/>\n            <div *ngIf=\"croppedImage\">\n              <button mat-raised-button color=\"accent\" (click)=\"downloadImage('cropped')\">DOWNLOAD</button>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-card>\n          <mat-card-content>\n            <h2>Input / Settings</h2>\n            <!--\n              <mat-label>Input Image</mat-label>\n              <input type=\"file\" (change)=\"fileChangeEvent($event)\"/>\n            -->\n            <h3>Target Cropping Size</h3>\n            <mat-form-field class=\"example-full-width\">\n              <mat-label>Width</mat-label>\n              <input matInput type=\"number\" placeholder=\"1080\" [(ngModel)]=\"width\"/>\n            </mat-form-field>\n            <span></span>\n            <mat-form-field class=\"example-full-width\">\n              <mat-label>Height</mat-label>\n              <input matInput type=\"number\" placeholder=\"1080\" [(ngModel)]=\"height\"/>\n            </mat-form-field>\n            <h3>Sample size</h3>\n            <mat-slider \n              thumbLabel\n              [displayWith]=\"formatLabel\"\n              [(ngModel)]=\"sampleSize\"\n              (change)=\"sampleSizeUpdated()\"\n              min=\"7\" max=\"33\" step=\"2\" tickInterval=\"2\"\n              class=\"mat-slider\">\n            </mat-slider>\n            <h3>Brightness</h3>\n            <mat-slider \n              thumbLabel\n              [displayWith]=\"formatLabel\"\n              [(ngModel)]=\"brightness\"\n              (change)=\"brightnessUpdated($event)\"\n              min=\"-100\" max=\"100\" step=\"5\" tickInterval=\"5\"\n              class=\"mat-slider\">\n            </mat-slider>\n            <h3>Contrast</h3>\n            <mat-slider \n              thumbLabel\n              [displayWith]=\"formatLabel\"\n              [(ngModel)]=\"contrast\"\n              (change)=\"contrastUpdated($event)\"\n              min=\"-100\" max=\"100\" step=\"5\" tickInterval=\"5\"\n              class=\"mat-slider\">\n            </mat-slider>\n            <button mat-raised-button color=\"accent\" (click)=\"sampleSizeUpdated()\">CREATE!</button>\n            <button mat-raised-button color=\"warn\" (click)=\"initialize()\">RESET</button>\n          </mat-card-content>\n        </mat-card>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-card>\n          <mat-card-title>\n            <h2>Halftoned Image</h2>\n          </mat-card-title>\n          <mat-card-content>\n            <div *ngIf=\"isProcessing\" class=\"loading-shade\">\n             <mat-spinner color=\"accent\"></mat-spinner>\n            </div>\n            <img [src]=\"halftoneImage\" class=\"cropped\"/>\n            <div *ngIf=\"halftoneImage\">\n              <button mat-raised-button color=\"accent\" (click)=\"downloadImage('halftone')\">DOWNLOAD</button>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n\n<a id=\"img-donwload\" herf=\"\" download></a>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { DropFilesDirective } from './drop-files.directive';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n/*\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { MatDialogModule } from '@angular/material/dialog';\n*/\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DropFilesDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ImageCropperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\n\n@Directive({\n  selector: '[appDropFiles]'\n})\nexport class DropFilesDirective {\n\n  private attachments: any = [];\n  private elem: HTMLElement;\n\n  @Output()\n  public selectedFiles: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n  constructor(private element: ElementRef) {\n      this.elem = this.element.nativeElement;\n  }\n\n  @Input('appDropFiles')\n  set fileUploadQueue(value: any) {\n      if (value) {\n        this.attachments = value;\n      }\n  }\n\n\n  @HostListener('change')\n  public onChange(): any {\n    const files = this.element.nativeElement.files;\n    this.selectedFiles.emit(files);\n\n    // for (const file of files) {\n    //   this.attachments.push(file);\n    // }\n\n    this.element.nativeElement.value = '';\n  }\n\n  @HostListener('drop', [ '$event' ])\n  public onDrop(event: any): any {\n    const files = event.dataTransfer.files;\n    this.selectedFiles.emit(files);\n\n    // for (const file of files) {\n    //   this.attachments.push(file);\n    // }\n\n    event.preventDefault();\n    event.stopPropagation();\n    this.element.nativeElement.value = '';\n  }\n\n  @HostListener('dragover', [ '$event' ])\n  public onDropOver(event: any): any {\n      event.preventDefault();\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { CropperPosition } from 'ngx-image-cropper';\nimport { Observable } from 'rxjs';\nimport { read, MIME_JPEG } from 'jimp';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageManipulatorService {\n\n  constructor() { }\n\n  async halftone(\n    filepath: any,\n    position: CropperPosition,\n    width: number, height: number, sample: number, brightness: number, contrast: number): Promise<string> {\n    const image = await read(filepath);\n\n    image\n      .crop(position.x1, position.y1, position.x2 - position.x1, position.y2 - position.y1)\n      .brightness(brightness)\n      .contrast(contrast)\n      .scan(0, 0, image.bitmap.width, image.bitmap.height, (x, y, idx) => {\n      // sampleサイズ毎に濃淡を計算し、円のサイズを決める。\n      if (y % sample === 0 && x % sample === 0) {\n        let level = 0;\n        let x1: number;\n        let y1: number;\n        let radius: number;\n\n        for (let iy = 0; iy < sample; iy++) {\n          for (let ix = 0; ix < sample; ix++) {\n            const idxi: number = image.getPixelIndex(x + ix, y + iy);\n            // grey scale値を計算\n            level += Math.round(\n                0.2126 * image.bitmap.data[idxi + 0] +\n                0.7152 * image.bitmap.data[idxi + 1] +\n                0.0722 * image.bitmap.data[idxi + 2]\n            );\n          }\n        }\n        radius =　sample * (1 - level / (sample * sample * 0xFF));\n        x1 = x + (sample - 1) / 2,\n        y1 = y + (sample - 1) / 2;\n\n        for (let iy = 0; iy < sample; iy++) {\n          for (let ix = 0; ix < sample; ix++) {\n            const idxi = image.getPixelIndex(x + ix, y + iy,);\n            // 半径を計算する。\n            const curR = Math.sqrt(Math.pow(x + ix - x1, 2) + Math.pow(y + iy - y1, 2));\n            // grey scale値を計算\n            if (curR < radius) {\n              image.bitmap.data[idxi + 0] = 0x00;\n              image.bitmap.data[idxi + 1] = 0x00;\n              image.bitmap.data[idxi + 2] = 0x00;\n            } else {\n              image.bitmap.data[idxi + 0] = 0xff;\n              image.bitmap.data[idxi + 1] = 0xff;\n              image.bitmap.data[idxi + 2] = 0xff;\n            }\n          }\n        }\n      }\n    });\n\n    // ファイルを保存する\n    return image\n      .resize(width, height)\n      .quality(100)\n      .getBase64Async(MIME_JPEG);\n  }\n\n  async cropImageUpdate(filepath: any, brightness: number, contrast: number): Promise<string> {\n    const image = await read(filepath);\n    return image\n            .brightness(brightness)\n            .contrast(contrast)\n            .getBase64Async(MIME_JPEG);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}